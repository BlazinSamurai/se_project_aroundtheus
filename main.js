!function(){"use strict";class e{constructor(e,t,s,r,n){let{name:i,altName:o,link:a,_id:l}=e;this.name=i,this.altName=o,this.link=a,this._id=l,this._cardSelector=t,this._handleImageClick=s,this._handleConfirmModal=r,this._handleLikeIconClick=n}_setCardData(){return this._cardImage.src=this.link,this._cardImage.alt=this.altName,this._cardTitle.textContent=this.name,this.cardElement}_setEventListener(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIconClick(this)})),this._trashButton.addEventListener("click",(()=>{this._handleConfirmModal(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)}))}changeHeartIcon(e){e.apiData.isLiked?(this._likeButton.classList.remove("card__button-like_active"),e.apiData.isLiked=!1):(this._likeButton.classList.add("card__button-like_active"),e.apiData.isLiked=!0)}setHeartIcon(e){this.apiData=e,e.isLiked&&this._likeButton.classList.add("card__button-like_active")}removeCard(e){e.remove(),e=null}getView(){return this.cardElement=document.querySelector(this._cardSelector).content.querySelector(".card__section").cloneNode(!0),this._likeButton=this.cardElement.querySelector(".card__button-like"),this._trashButton=this.cardElement.querySelector(".card__button-trash"),this._cardImage=this.cardElement.querySelector(".card__image"),this._cardTitle=this.cardElement.querySelector(".card__title"),this._setCardData(),this._setEventListener(),this.cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inputErrorClass=e.errorClass,this._validatedForm=t}_enableButton(){this._button.classList.remove(`${this._submitButtonSelector}_disabled`),this._button.disabled=!1}_showInputError(e){this._errorClassEl=document.querySelector(`#${e.id}-error`),e.classList.add(this._errorClassEl.id),this._errorClassEl.textContent=e.validationMessage,this._errorClassEl.classList.add(`#${e.id}-error`)}_hideInputError(e){this._errorClassEl=document.querySelector(`#${e.id}-error`),e.classList.remove(this._errorClassEl.id),this._errorClassEl.textContent="",this._errorClassEl.classList.remove(`#${e.id}-error`)}_returnsValidity(){return this._inputs.every((e=>e.validity.valid))}_toggleButtonState(){this._returnsValidity()?this._enableButton():this.disableButton()}_checkInputValidity(e){this._returnsValidity()?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputs=[...this._validatedForm.querySelectorAll(`.${this._inputSelector}`)],this._button=this._validatedForm.querySelector(`.${this._submitButtonSelector}`),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._button.classList.add(`${this._submitButtonSelector}_disabled`),this._button.disabled=!0}enableValidation(){this._validatedForm.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupSelector=t,this._popupElement=document.querySelector(t),this._closePopupButton=this._popupElement.querySelector(".modal__close"),this._handleOverlayClick=e=>this._handleOverlay(e),this._handleDocumentKeydown=e=>this._handleEscClose(e)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlay(e){e.target.id===this._popupElement.id&&this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("click",this._handleOverlayClick,!0),document.addEventListener("keydown",this._handleDocumentKeydown,!1)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("click",this._handleOverlayClick,!0),document.removeEventListener("keydown",this._handleDocumentKeydown,!1)}setEventListeners(){this._closePopupButton.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setButtonText(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving . . .";if(e)return t.textContent=s,!0;t.textContent=s}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{const e=this._getInputValues();this._handleFormSubmit(e)}))}}const n={formSelector:"modal__form",inputSelector:"modal__input",submitButtonSelector:"modal__button",errorClass:"modal__input-error"},i=document.querySelector("#add-modal-form"),o=i.querySelector(".modal__button"),a=document.querySelector("#edit-modal").querySelector("#edit-modal-form"),l=a.querySelector(".modal__button"),c=document.querySelector("#profile-modal-form"),h=document.querySelector("#profile__avatar-pen-icon"),d=document.querySelector(".profile__button-edit"),u=document.querySelector(".profile__button-add"),_=c.querySelector(".modal__button"),m=(document.querySelector("#profile__avatar-pic"),document.querySelector("#trash-modal").querySelector(".modal__button"));function p(e){q.open(e)}function v(e){B.open(),B.setSubmitFunction((()=>{g.setButtonText(!0,m),I.deleteCard(e.apiData._id).then((()=>{B.close(),e.removeCard(e.cardElement)})).catch((e=>{console.error(e)})).finally((()=>{g.setButtonText(!1,m,"Yes")}))}))}function E(e){e.apiData.isLiked?I.deleteCardLike(e.apiData._id).then((()=>{e.changeHeartIcon(e)})).catch((e=>{console.error(e)})):I.putCardLike(e.apiData._id).then((()=>{e.changeHeartIcon(e)})).catch((e=>{console.error(e)}))}function S(t){const s=new e({name:t.name,altName:t.name,link:t.link,_id:t._id},"#card-template",p,v,E),r=s.getView();return s.setHeartIcon(t),r}h.addEventListener("click",(()=>{L.open(),f.disableButton()})),d.addEventListener("click",(()=>{const e=b.getUserInfo();C.setInputValues(e),C.open(),y.disableButton()})),u.addEventListener("click",(()=>{g.open(),k.disableButton()}));const b=new class{constructor(e,t,s){this._nameSelector=e,this._bioSelector=t,this._avatarSelector=s,this._nameElement=document.querySelector(this._nameSelector),this._bioElement=document.querySelector(this._bioSelector),this._avatarElement=document.querySelector(this._avatarSelector)}setAvatarPic(e){this._avatarElement.src=e}getUserInfo(){return{name:this._nameElement.textContent,bio:this._bioElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e,t,s){this._nameElement.textContent=e,this._bioElement.textContent=t,this._avatarElement.src=s}}(".profile__name",".profile__bio","#profile__avatar-pic"),f=new t(n,c);f.enableValidation();const y=new t(n,a);y.enableValidation();const k=new t(n,i);k.enableValidation();const L=new r("#profile-modal",(function(e){L.setButtonText(!0,_),I.patchProfileAvatar(e.url).then((e=>{f.disableButton(),b.setAvatarPic(e.avatar),L.close(),c.reset()})).catch((e=>{console.error(e)})).finally((()=>{L.setButtonText(!1,_,"Save")}))}));L.setEventListeners();const C=new r("#edit-modal",(function(e){const t=b.getUserInfo();C.setButtonText(!0,l),I.patchProfile(e.name,e.bio).then((()=>{y.disableButton(),b.setUserInfo(e.name,e.bio,t.avatar),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setButtonText(!1,l,"Save")}))}));C.setEventListeners();const g=new r("#add-modal",(function(e){const t=e.title,s=e.url;g.setButtonText(!0,o),I.postCards({name:t,link:s}).then((e=>{k.disableButton();const t=S(e);w.addItem(t),g.close(),i.reset()})).catch((e=>{console.error(e)})).finally((()=>{g.setButtonText(!1,o,"Create")}))}));g.setEventListeners();const q=new class extends s{constructor(e){super({popupSelector:e}),this._popupPreviewImage=document.querySelector(`${e}-image`),this._popupPreviewCaption=document.querySelector(`${e}-title`)}open(e){this._popupPreviewImage.src=e.link,this._popupPreviewImage.alt=e.altName,this._popupPreviewCaption.textContent=e.name,super.open()}}("#preview-modal");q.setEventListeners();const B=new class extends s{constructor(e,t){super({popupSelector:e}),this._popupSelector=e,this._handleDelete=t}setSubmitFunction(e){this._handleDelete=e}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleDelete()}))}}("#trash-modal",v);B.setEventListeners();const I=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status} + ${e.message}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}patchProfileAvatar(e){return this._request(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}getProfile(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}patchProfile(e,t){return this._request(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}getCards(){return fetch(this._baseUrl+"/cards",{method:"GET",headers:this._headers}).then(this._checkResponse).then((e=>e))}postCards(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse).then((e=>e))}putCardLike(e){return fetch(this._baseUrl+`/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteCardLike(e){return fetch(this._baseUrl+`/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(this._baseUrl+`/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse).then((e=>{console.log(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c430f938-707d-41ce-9931-5e6195b9093a","Content-Type":"application/json"}});I.getProfile().then((e=>{b.setUserInfo(e.name,e.about,e.avatar)})).catch((e=>{console.error(e)}));const w=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._classSelector=t,this.container=document.querySelector(this._classSelector)}renderItems(e){e.forEach((e=>{const t=this._renderer(e);this.container.append(t)}))}addItem(e){this.container.prepend(e)}}({items:null,renderer:S},".card__list");I.getCards().then((e=>{w.renderItems(e)})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,